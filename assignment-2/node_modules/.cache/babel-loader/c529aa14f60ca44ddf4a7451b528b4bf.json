{"ast":null,"code":"var _jsxFileName = \"/Applications/Pravallika/webDevelopment/React/assignment-2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Texts: [{\n        text: \"\"\n      }]\n    };\n\n    this.lengthCalcHandler = event => {\n      this.setState({\n        Texts: [{\n          text: event.target.value\n        }],\n        len: event.text.length\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your text\",\n      onChange: this.lengthCalcHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Create a new component (=> ValidationComponent) which receives the text length as a prop\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Inside the ValidationComponent, either output \\\"Text too short\\\" or \\\"Text long enough\\\" depending on the text length (e.g. take 5 as a minimum length)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"When you click a CharComponent, it should be removed from the entered text.\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Hint: Keep in mind that JavaScript strings are basically arrays!\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Applications/Pravallika/webDevelopment/React/assignment-2/src/App.js"],"names":["React","Component","App","state","Texts","text","lengthCalcHandler","event","setState","target","value","len","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBE,KADwB,GAChB;AACNC,MAAAA,KAAK,EAAE,CACL;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADK;AADD,KADgB;;AAAA,SAQxBC,iBARwB,GAQHC,KAAD,IAAW;AAC3B,WAAKC,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAE,CACL;AAAEC,UAAAA,IAAI,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAArB,SADK,CADK;AAIZC,QAAAA,GAAG,EAAEJ,KAAK,CAACF,IAAN,CAAWO;AAJJ,OAAd;AAMH,KAfuB;AAAA;;AAkB1BC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,iBAA/B;AAAiD,MAAA,QAAQ,EAAI,KAAKP,iBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sJADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iKAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yLAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0JALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFANF,CAHF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAXF,CADF;AAeD;;AAlCyB;;AAqC5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n      Texts: [\n        { text: \"\"}\n      ]\n      \n    }\n\n    lengthCalcHandler = (event) => {\n        this.setState({\n          Texts: [\n            { text: event.target.value}\n          ],\n          len: event.text.length\n        })\n    }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <input type=\"text\" placeholder=\"Enter your text\" onChange = {this.lengthCalcHandler}/>\n        <ol>\n          <li>Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).</li>\n          <li>Create a new component (=> ValidationComponent) which receives the text length as a prop</li>\n          <li>Inside the ValidationComponent, either output \"Text too short\" or \"Text long enough\" depending on the text length (e.g. take 5 as a minimum length)</li>\n          <li>Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).</li>\n          <li>Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.</li>\n          <li>When you click a CharComponent, it should be removed from the entered text.</li>\n        </ol>\n        <p>Hint: Keep in mind that JavaScript strings are basically arrays!</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}