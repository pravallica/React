{"ast":null,"code":"var _jsxFileName = \"/Applications/Pravallika/webDevelopment/React/assignment-2/src/App.js\";\nimport React, { Component } from \"react\";\nimport Validation from './ValidationComponent/Validation';\nimport Char from \"./CharComponent/Char\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: \"\"\n    };\n\n    this.lengthCalcHandler = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let letters = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \", this.state.text.split('').map(letter => {\n      return React.createElement(Char, {\n        char: letter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your text\",\n      onChange: this.lengthCalcHandler,\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"The input is \", this.state.text, \" \"), React.createElement(Validation, {\n      textLen: this.state.text.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), letters, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Create a new component (=> ValidationComponent) which receives the text length as a prop\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Inside the ValidationComponent, either output \\\"Text too short\\\" or \\\"Text long enough\\\" depending on the text length (e.g. take 5 as a minimum length)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"When you click a CharComponent, it should be removed from the entered text.\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Hint: Keep in mind that JavaScript strings are basically arrays!\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Applications/Pravallika/webDevelopment/React/assignment-2/src/App.js"],"names":["React","Component","Validation","Char","App","state","text","lengthCalcHandler","event","setState","target","value","render","letters","split","map","letter","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE;AADA,KADkB;;AAAA,SAK1BC,iBAL0B,GAKNC,KAAK,IAAI;AAC3B,WAAKC,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADP,OAAd;AAGD,KATyB;AAAA;;AAa1BC,EAAAA,MAAM,GAAG;AAEP,QAAIC,OAAO,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKR,KAAL,CAAWC,IAAX,CAAgBQ,KAAhB,CAAsB,EAAtB,EAA0BC,GAA1B,CAA8BC,MAAM,IAAG;AAC1C,aAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAGA,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP,CADF;AAMA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,QAAQ,EAAE,KAAKT,iBAHjB;AAIE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiB,KAAKD,KAAL,CAAWC,IAA5B,MAPF,EAQE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAI,KAAKD,KAAL,CAAWC,IAAX,CAAgBW,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASGJ,OATH,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sJADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGANF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iKAVF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yLAfF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0JApBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAzBF,CAZF,EA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EA1CF,CADF;AA8CD;;AAnEyB;;AAsE5B,eAAeT,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Validation from './ValidationComponent/Validation';\nimport Char from \"./CharComponent/Char\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  state = {\n    text: \"\"\n  };\n\n  lengthCalcHandler = event => {\n    this.setState({\n      text: event.target.value\n    });\n  };\n\n  \n\n  render() {\n    \n    let letters = (\n      <div> {this.state.text.split('').map(letter =>{\n          return <Char char ={letter}  />\n      })}\n        </div>\n    )\n    return (\n      <div className=\"App\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter your text\"\n          onChange={this.lengthCalcHandler}\n          value={this.state.text}\n        />\n        <p>The input is {this.state.text} </p>\n        <Validation textLen = {this.state.text.length}/>\n        {letters}\n\n        <hr />\n        <ol>\n          <li>\n            Create an input field (in App component) with a change listener\n            which outputs the length of the entered text below it (e.g. in a\n            paragraph).\n          </li>\n          <li>\n            Create a new component (=> ValidationComponent) which receives the\n            text length as a prop\n          </li>\n          <li>\n            Inside the ValidationComponent, either output \"Text too short\" or\n            \"Text long enough\" depending on the text length (e.g. take 5 as a\n            minimum length)\n          </li>\n          <li>\n            Create another component (=> CharComponent) and style it as an\n            inline box (=> display: inline-block, padding: 16px, text-align:\n            center, margin: 16px, border: 1px solid black).\n          </li>\n          <li>\n            Render a list of CharComponents where each CharComponent receives a\n            different letter of the entered text (in the initial input field) as\n            a prop.\n          </li>\n          <li>\n            When you click a CharComponent, it should be removed from the\n            entered text.\n          </li>\n        </ol>\n        <p>Hint: Keep in mind that JavaScript strings are basically arrays!</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}