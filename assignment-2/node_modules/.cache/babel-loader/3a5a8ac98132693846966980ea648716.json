{"ast":null,"code":"var _jsxFileName = \"/Applications/Pravallika/webDevelopment/React/assignment-2/src/App.js\";\nimport React, { Component } from \"react\";\nimport Validation from './ValidationComponent/Validation';\nimport Char from \"./CharComponent/Char\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: \"\"\n    };\n\n    this.lengthCalcHandler = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.removeCharHandler = itemIndex => {\n      const deleted = [this.state.text.split('')];\n      deleted.splice(itemIndex, 1);\n      this.setState({\n        text: deleted.join('')\n      });\n    };\n  }\n\n  render() {\n    let letters = this.state.text.split('').map((letter, index) => {\n      return React.createElement(Char, {\n        char: letter,\n        key: index,\n        click: this.removeCharHandler.bind(this, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your text\",\n      onChange: this.lengthCalcHandler,\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"The input is \", this.state.text, \" \"), React.createElement(Validation, {\n      textLen: this.state.text.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), letters, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Create a new component (=> ValidationComponent) which receives the text length as a prop\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Inside the ValidationComponent, either output \\\"Text too short\\\" or \\\"Text long enough\\\" depending on the text length (e.g. take 5 as a minimum length)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"When you click a CharComponent, it should be removed from the entered text.\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Hint: Keep in mind that JavaScript strings are basically arrays!\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Applications/Pravallika/webDevelopment/React/assignment-2/src/App.js"],"names":["React","Component","Validation","Char","App","state","text","lengthCalcHandler","event","setState","target","value","removeCharHandler","itemIndex","deleted","split","splice","join","render","letters","map","letter","index","bind","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE;AADA,KADkB;;AAAA,SAK1BC,iBAL0B,GAKLC,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADP,OAAd;AAGD,KATyB;;AAAA,SAW1BC,iBAX0B,GAWLC,SAAD,IAAe;AACjC,YAAMC,OAAO,GAAG,CAAC,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,KAAhB,CAAsB,EAAtB,CAAD,CAAhB;AACAD,MAAAA,OAAO,CAACE,MAAR,CAAeH,SAAf,EAAyB,CAAzB;AACA,WAAKJ,QAAL,CAAc;AAACH,QAAAA,IAAI,EAACQ,OAAO,CAACG,IAAR,CAAa,EAAb;AAAN,OAAd;AACD,KAfyB;AAAA;;AAiB1BC,EAAAA,MAAM,GAAG;AAEP,QAAIC,OAAO,GAAG,KAAKd,KAAL,CAAWC,IAAX,CAAgBS,KAAhB,CAAsB,EAAtB,EAA0BK,GAA1B,CAA8B,CAACC,MAAD,EAAQC,KAAR,KAAiB;AACvD,aAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAGD,MAAb;AACP,QAAA,GAAG,EAAIC,KADA;AAEK,QAAA,KAAK,EAAI,KAAKV,iBAAL,CAAuBW,IAAvB,CAA4B,IAA5B,EAAiCD,KAAjC,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAGH,KAJW,CAAd;AAKA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,QAAQ,EAAE,KAAKf,iBAHjB;AAIE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiB,KAAKD,KAAL,CAAWC,IAA5B,MAPF,EAQE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAI,KAAKD,KAAL,CAAWC,IAAX,CAAgBkB,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASGL,OATH,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sJADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGANF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iKAVF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yLAfF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0JApBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAzBF,CAZF,EA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EA1CF,CADF;AA8CD;;AAtEyB;;AAyE5B,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Validation from './ValidationComponent/Validation';\nimport Char from \"./CharComponent/Char\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  state = {\n    text: \"\"\n  };\n\n  lengthCalcHandler = (event) => {\n    this.setState({\n      text: event.target.value\n    });\n  };\n\n  removeCharHandler = (itemIndex) => {\n    const deleted = [this.state.text.split('')];\n    deleted.splice(itemIndex,1);\n    this.setState({text:deleted.join('')})\n  }\n\n  render() {\n    \n    let letters = this.state.text.split('').map((letter,index) =>{\n          return <Char char ={letter} \n          key = {index}\n                      click = {this.removeCharHandler.bind(this,index)} />\n      })\n    return (\n      <div className=\"App\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter your text\"\n          onChange={this.lengthCalcHandler}\n          value={this.state.text}\n        />\n        <p>The input is {this.state.text} </p>\n        <Validation textLen = {this.state.text.length}/>\n        {letters}\n\n        <hr />\n        <ol>\n          <li>\n            Create an input field (in App component) with a change listener\n            which outputs the length of the entered text below it (e.g. in a\n            paragraph).\n          </li>\n          <li>\n            Create a new component (=> ValidationComponent) which receives the\n            text length as a prop\n          </li>\n          <li>\n            Inside the ValidationComponent, either output \"Text too short\" or\n            \"Text long enough\" depending on the text length (e.g. take 5 as a\n            minimum length)\n          </li>\n          <li>\n            Create another component (=> CharComponent) and style it as an\n            inline box (=> display: inline-block, padding: 16px, text-align:\n            center, margin: 16px, border: 1px solid black).\n          </li>\n          <li>\n            Render a list of CharComponents where each CharComponent receives a\n            different letter of the entered text (in the initial input field) as\n            a prop.\n          </li>\n          <li>\n            When you click a CharComponent, it should be removed from the\n            entered text.\n          </li>\n        </ol>\n        <p>Hint: Keep in mind that JavaScript strings are basically arrays!</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}